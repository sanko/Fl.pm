class 'Fl::MultilineOutput';
isa 'Fl::Output';
include 'FL/Fl_Multiline_Output.H';
widget_type 'Fl_Multiline_Output';

=pod

=head1 NAME

Fl::MultilineOutput - Display Widget for Multiple Lines of Text

=head1 Synopsis

    use Fl;
    my $output = Fl::MultilineOutput->new(0, 0, 100, 200, 'Hello, World!');

=head1 Description

This widget is a subclass of Fl::Output that displays multiple lines of text.

It also displays tab characters as whitespace to the next column.

Note that this widget does not support scrollbars, or per-character color
control.

If you are presenting large amounts of read-only text and need scrollbars, or
full color control of characters, then use Fl::TextDisplay. If you want to
display HTML text, use Fl::HelpView.

=for html <center><img src="http://www.fltk.org/doc-1.3/text.png" /></center>

=head1 Methods

Fl::MultilineOutput inherits from Fl::Output, Fl::Input and Fl::Widget. On top
of that, it exposes the following methods...

=head2 new(...)

    my $text_a = Fl::MultilineOutput->new(0, 0, 250, 500, 'Important Stuff');
    my $text_b = Fl::MultilineOutput->new(0, 0, 250, 500);

The constructor creates a new widget using the given position, size, and label.

The widget's boxtype is FL_DOWN_BOX by default.

The destructor removes the widget.

=cut

xs {name        => 'new',
    definitions => [
            {required => [[qw[int w]], [qw[int h]], [qw[int x]], [qw[int y]]],
             optional => [['const char *', 'label', '""']],
             returns  => 'Fl_Multiline_Output *'
            }
    ]
};
xs {name        => 'DESTROY',
    definitions => [{returns => 'void'}]
};
xs {name        => 'draw',
    definitions => [{returns  => 'void' }
    ]
};
xs {name        => 'handle',
    definitions => [{required => [[qw[int event]]], returns  => 'int'  }
    ]
};

=pod

=head1 LICENSE

Copyright (C) Sanko Robinson.

This library is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

=head1 AUTHOR

Sanko Robinson E<lt>sanko@cpan.orgE<gt>

=cut
