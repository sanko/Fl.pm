class 'Fl::RoundButton';
isa 'Fl::Button';
include 'FL/Fl_Round_Button.H';
widget_type 'Fl_Round_Button';

=pod

=head1 NAME

Fl::RoundButton - Button with a Radio Circle

=head1 Synopsis

    use Fl;
    my $button = Fl::RoundButton->new(0, 0, 100, 200, 'Hello, World!');
    $button->callback(sub {print q[It's dat boi]} );

=head1 Description

The Fl::RoundButton class represents a button that turns on a round light
rather than drawing pushed in. The shape of the light is initially set to
FL_ROUND_DOWN_BOX. The color of the ligth when on is controlled with
C<selection_color()> which defaults to FL_FOREGROUND_COLOR.

=for html <center><img src="http://www.fltk.org/doc-1.3/Fl_Round_Button.png" /></center>

=head1 Methods

Fl::RoundButton inherits from Fl::Button which in turns inherits from
Fl::Widget. On top of that, it exposes the following methods...

=head2 new(...)

    my $button_a = Fl::RoundButton->new(0, 0, 250, 500, 'Important Stuff');
    my $button_b = Fl::RoundButton->new(0, 0, 250, 500);

The constructor creates a new button using the given position, size, and label.

The destructor removes the button.

=cut

xs {name        => 'new',
    definitions => [
            {required => [[qw[int w]], [qw[int h]], [qw[int x]], [qw[int y]]],
             optional => [['const char *', 'label', '""']],
             returns  => 'Fl_Round_Button *'
            }
    ]
};
xs {name        => 'DESTROY',
    definitions => [{returns => 'void'}]
};
xs {name        => 'draw',
    definitions => [{returns  => 'void' }
    ]
};
xs {name        => 'handle',
    definitions => [{required => [[qw[int event]]], returns  => 'int'  }
    ]
};

=pod

=head1 LICENSE

Copyright (C) Sanko Robinson.

This library is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

=head1 AUTHOR

Sanko Robinson E<lt>sanko@cpan.orgE<gt>

=cut
